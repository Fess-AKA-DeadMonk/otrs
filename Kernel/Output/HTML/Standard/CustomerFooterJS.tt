# --
# Copyright (C) 2001-2017 OTRS AG, http://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY. For details, see
# the enclosed file COPYING for license information (AGPL). If you
# did not receive this file, see http://www.gnu.org/licenses/agpl.txt.
# --

[% RenderBlockStart("CommonJS") %]
    <script type="text/javascript" src="[% Config("Frontend::JavaScriptPath") | html %][% Data.JSDirectory | html %][% Data.Filename | html %]"></script>
[% RenderBlockEnd("CommonJS") %]

[% RenderBlockStart("ModuleJS") %]
    <script type="text/javascript" src="[% Config("Frontend::JavaScriptPath") | html %][% Data.JSDirectory | html %][% Data.Filename | html %]"></script>
[% RenderBlockEnd("ModuleJS") %]

<script type="text/javascript">//<![CDATA[
"use strict";

Core.Customer.Enhance();

Core.App.Ready(function() {

    Core.Config.AddConfig({
        // config
        Baselink: [% Env("Baselink") | JSON %],
        CGIHandle: [% Env("CGIHandle") | JSON %],
        WebPath: [% Config("Frontend::WebPath") | JSON %],
        Action: [% Env("Action") | JSON %],
        SessionIDCookie: [% Env("SessionIDCookie") | JSON %],
        SessionName: [% Config("SessionName") | JSON %],
        SessionID: [% Env("SessionID") | JSON %],
        ChallengeToken: [% Env("UserChallengeToken") | JSON %],
        CustomerPanelSessionName: [% Config("CustomerPanelSessionName") | JSON %],
        Images: [% Config("Frontend::ImagePath") | JSON %],
        UserLanguage: [% Env("UserLanguage") | JSON %],
        CheckEmailAddresses: parseInt([% Config("CheckEmailAddresses") | JSON %], 10),
        AnimationEnabled: parseInt([% Config("Frontend::AnimationEnabled") | JSON %], 10),
[% RenderBlockStart("AutoCompleteConfig") %]
        Autocomplete: [% Data.AutocompleteConfig %],
[% RenderBlockEnd("AutoCompleteConfig") %]
        // translation
        ValidateServerErrorTitle: [% Translate("Error") | JSON %],
        ValidateServerErrorMsg: [% Translate("One or more errors occurred!") | JSON %],
        DialogCloseMsg: [% Translate("Close this dialog") | JSON %],
        PopupBlockerMsg: [% Translate("Could not open popup window. Please disable any popup blockers for this application.") | JSON %],
        SearchMsg: [% Translate("Search") | JSON %],
        ApplyButtonText: [% Translate("Apply") | JSON %],
        NoElementsToSelectFromMsg: [% Translate("There are currently no elements available to select from.") | JSON %],
        TurnOffCompatibilityModeMsg: [% Translate("Please turn off Compatibility Mode in Internet Explorer!") | JSON %],
        BrowserTooOldMsg: [% Translate("The browser you are using is too old.") | JSON %],
        BrowserListMsg: [% Translate("OTRS runs with a huge lists of browsers, please upgrade to one of these.") | JSON %],
        BrowserDocumentationMsg: [% Translate("Please see the documentation or ask your admin for further information.") | JSON %]
    });

    Core.Customer.Init();

[% InsertTemplate("Datepicker.tt") %]

});
//]]></script>

<script type="text/javascript">//<![CDATA[
"use strict";
Core.App.Ready(function() {

    [% PROCESS JSOnDocumentCompleteInsert %]

});
//]]></script>

# Finally, unblock click events on the page again after all JavaScript was loaded and
# executed. Put in an own block to make sure it is always run.
<script type="text/javascript">//<![CDATA[
"use strict";
Core.App.Ready(function () {
    Core.App.UnblockEvents();
});
//]]></script>
